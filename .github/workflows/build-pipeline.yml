name: AccentureWorkshop

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  schedule:
    - cron: '30 5 * * 1,3'
    - cron: '30 5 * * 2,4'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: npm ci
  tests:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.schedule != '30 5 * * 1,3'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: npm ci
      - name: Testing
        run: npm run test
      - name: Run typescript lint and format check
        run: npm run lint:ts
      - name: Run styles lint and format check
        run: npm run lint:css
        
  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: dist
      - name: "Hei"
        run: echo Din nisse $CAT_NAME
        env:
          CAT_NAME: Mns
      - name: "Printing secret"
        run: echo Halla har du printa en secret before eller? $SECRET
        env: 
          SECRET: ${{secrets.PASSWORD}}

      # Step 2: Add deploy to Github pages here! Hot tip - The solution is in the Readme
  docker:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Login to docker
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Tell Docker Hub we want to store our docker image
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: johsol/accenturetest
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  Johan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Printer navnet
        run: echo Job failed
        if: github.event.build.failJob == 'true'
  SendMail:
    needs: tests
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Specify connection via URL (replaces server_address, server_port, secure,
          # username and password)
          #
          # Format:
          #
          #  * smtp://user:password@server:port
          #  * smtp+starttls://user:password@server:port
          connection_url: ${{secrets.MAIL_CONNECTION}}
          # Required mail server address if not connection_url:
          server_address: smtp.gmail.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended) mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: obiwan@example.com,yoda@example.com
          # Required sender full name (address can be skipped):
          from: Luke Skywalker # <user@example.com>
          # Optional plain body:
          body: Build job of ${{github.repository}} completed successfully!
          # Optional HTML body read from file:
          html_body: file://README.html
          # Optional carbon copy recipients:
          cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients:
          bcc: r2d2@example.com,hansolo@example.com
          # Optional recipient of the email response:
          reply_to: luke@example.com
          # Optional Message ID this message is replying to:
          in_reply_to: <random-luke@example.com>
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional attachments:
          attachments: attachments.zip,git.diff,./dist/static/*.js
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: low
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Generate README.md
      uses: teoxoy/profile-readme-stats@v2
      with:
        token: ${{ secrets.USER_TOKEN }}
    - name: Update README.md
      run: |
        if [[ "$(git status --porcelain)" != "" ]]; then
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        git add .
        git commit -m "Update README"
        git push
        fi
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Test for public javascript library vulnerabilities 
        uses: lirantal/is-website-vulnerable@main
        with:
          scan-url: "johansolbakken.github.io"